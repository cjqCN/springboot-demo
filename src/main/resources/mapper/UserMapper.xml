<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.example.demo.bean.po.User">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="real_name" jdbcType="VARCHAR" property="realName"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="sex" jdbcType="TINYINT" property="sex"/>
        <result column="passwd" jdbcType="VARCHAR" property="passwd"/>
        <result column="salt" jdbcType="VARCHAR" property="salt"/>
        <result column="type" jdbcType="TINYINT" property="type"/>
        <result column="supplier_id" jdbcType="BIGINT" property="supplierId"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="is_deleted" jdbcType="BIT" property="isDeleted"/>
        <result column="create_user_id" jdbcType="BIGINT" property="createUserId"/>
        <result column="create_user_name" jdbcType="VARCHAR" property="createUserName"/>
        <result column="create_date" jdbcType="BIGINT" property="createDate"/>
        <result column="modify_user_id" jdbcType="BIGINT" property="modifyUserId"/>
        <result column="modify_user_name" jdbcType="VARCHAR" property="modifyUserName"/>
        <result column="modify_date" jdbcType="BIGINT" property="modifyDate"/>
        <result column="delete_user_id" jdbcType="BIGINT" property="deleteUserId"/>
        <result column="delete_user_name" jdbcType="VARCHAR" property="deleteUserName"/>
        <result column="delete_date" jdbcType="BIGINT" property="deleteDate"/>
        <result column="lock_version" jdbcType="BIGINT" property="lockVersion"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, user_name, real_name, email, phone, sex, passwd, salt, type, supplier_id, status,
        remark, is_deleted, create_user_id, create_user_name, create_date, modify_user_id,
        modify_user_name, modify_date, delete_user_id, delete_user_name, delete_date, lock_version
    </sql>

    <insert id="insertBatch" parameterType="com.example.demo.bean.po.User">
        <choose>
            <when test="list != null and list.size() >0">
                insert into adg_user
                (id, user_name, real_name, email,
                phone, sex, passwd,
                salt, type, supplier_id,
                status, remark,
                is_deleted, create_user_id, create_user_name,
                create_date, modify_user_id, modify_user_name,
                modify_date, delete_user_id, delete_user_name,
                delete_date, lock_version)
                values
                <foreach collection="list" item="node" separator=",">
                    (#{node.id,jdbcType=BIGINT}, #{node.userName,jdbcType=VARCHAR}, #{node.realName,jdbcType=VARCHAR},
                    #{node.email,jdbcType=VARCHAR},
                    #{node.phone,jdbcType=VARCHAR}, #{node.sex,jdbcType=TINYINT}, #{node.passwd,jdbcType=VARCHAR},
                    #{node.salt,jdbcType=VARCHAR}, #{node.type,jdbcType=TINYINT}, #{node.supplierId,jdbcType=BIGINT},
                    #{node.status,jdbcType=BIT}, #{node.remark,jdbcType=VARCHAR},
                    #{node.isDeleted,jdbcType=BIT}, #{node.createUserId,jdbcType=BIGINT},
                    #{node.createUserName,jdbcType=VARCHAR},
                    #{node.createDate,jdbcType=BIGINT}, #{node.modifyUserId,jdbcType=BIGINT},
                    #{node.modifyUserName,jdbcType=VARCHAR},
                    #{node.modifyDate,jdbcType=BIGINT}, #{node.deleteUserId,jdbcType=BIGINT},
                    #{node.deleteUserName,jdbcType=VARCHAR},
                    #{node.deleteDate,jdbcType=BIGINT}, #{node.lockVersion,jdbcType=BIGINT})
                </foreach>
            </when>
            <otherwise>
                SELECT 0
            </otherwise>
        </choose>
    </insert>

    <select id="findByConditions" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from adg_user
        <where>
            <if test="conditionSQL.conditions!=null">
                <![CDATA[  ${conditionSQL.conditions} ]]>
            </if>
            <if test="1 == 1">
                AND is_deleted != 1
            </if>
        </where>
        <choose>
            <when test="conditionSQL.sort!=null">
                <![CDATA[  ${conditionSQL.sort} ]]>
            </when>
            <otherwise>
                ORDER BY
                create_date ASC
            </otherwise>
        </choose>
    </select>

    <update id="softDeleteBatchById">
        update adg_user
        SET is_deleted = 1,
        delete_user_id = #{deleteUserId,jdbcType=BIGINT},
        delete_user_name = #{deleteUserName,jdbcType=VARCHAR},
        delete_date = #{deleteDate,jdbcType=BIGINT}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="softDeleteBatchByIdList">
        update adg_user
        SET is_deleted = 1,
        delete_user_id = #{deleteUserId,jdbcType=BIGINT},
        delete_user_name = #{deleteUserName,jdbcType=VARCHAR},
        delete_date = #{deleteDate,jdbcType=BIGINT}
        where is_deleted != 1
        <choose>
            <when test="ids != null and ids.size() >0">
                AND id IN
                <foreach collection="ids" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </when>
            <otherwise>
                AND 1 = 2
            </otherwise>
        </choose>
    </update>

</mapper>